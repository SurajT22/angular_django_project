# Generated by Django 5.0.1 on 2024-01-25 06:56

import django.contrib.auth.models
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User_Management',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(blank=True, max_length=30)),
                ('email', models.EmailField(max_length=100, unique=True)),
                ('user_type', models.IntegerField(blank=True, null=True)),
                ('first_name', models.CharField(blank=True, max_length=30)),
                ('last_name', models.CharField(blank=True, max_length=30)),
                ('department', models.CharField(blank=True, max_length=255, null=True)),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('password_expiry_status', models.CharField(blank=True, max_length=255, null=True)),
                ('password_change_attempts', models.IntegerField(blank=True, null=True)),
                ('user_status', models.IntegerField(blank=True, null=True)),
                ('password_creation_date', models.CharField(blank=True, max_length=255, null=True)),
                ('password_creation_time', models.CharField(blank=True, max_length=255, null=True)),
                ('rights', models.IntegerField(blank=True, null=True)),
                ('visible', models.IntegerField(blank=True, null=True)),
                ('created_on', models.DateTimeField(blank=True, null=True)),
                ('created_by', models.CharField(blank=True, max_length=255, null=True)),
                ('modified_on', models.DateTimeField(blank=True, null=True)),
                ('modified_by', models.CharField(blank=True, max_length=255, null=True)),
                ('remarks', models.CharField(blank=True, max_length=255, null=True)),
                ('last_passwords', models.CharField(blank=True, max_length=255, null=True)),
                ('server_rights', models.IntegerField(blank=True, null=True)),
                ('server_visible', models.IntegerField(blank=True, null=True)),
                ('server_access', models.IntegerField(blank=True, null=True)),
                ('fingerprint_data1', models.CharField(blank=True, max_length=255, null=True)),
                ('fingerprint_data2', models.CharField(blank=True, max_length=255, null=True)),
                ('fingerprint_data3', models.CharField(blank=True, max_length=255, null=True)),
                ('fingerprint_data4', models.CharField(blank=True, max_length=255, null=True)),
                ('fingerprint_data5', models.CharField(blank=True, max_length=255, null=True)),
                ('is_admin', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_superuser', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'db_table': 'usermanagement_user_management',
                'ordering': ['id', 'username', 'email', 'user_type', 'first_name', 'last_name', 'department', 'password_expiry_status', 'password_change_attempts', 'user_status', 'password_creation_date', 'password_creation_time', 'rights', 'visible', 'created_on', 'created_by', 'modified_on', 'modified_by', 'remarks', 'last_passwords', 'server_rights', 'server_visible', 'server_access', 'fingerprint_data1', 'fingerprint_data2', 'fingerprint_data3', 'fingerprint_data4', 'fingerprint_data5', 'is_admin', 'is_active', 'is_staff', 'is_superuser'],
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
